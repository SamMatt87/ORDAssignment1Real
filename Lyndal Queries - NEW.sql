-- QUESTION 1
SELECT ALB.TITLE, ALB.RELEASE_DATE, ALB.BASE_PRICE, ART.ARTIST_NAME CONDUCTOR
FROM ALBUM3 ALB, ROLE3 R, ARTIST ART
WHERE REF(ALB) = R.ALBUM_ID
AND REF(ART) = R.ARTIST_ID
AND R.ROLE = 'Conductor'
AND REF(ALB) IN
(
  SELECT R.ALBUM_ID
  FROM ROLE3 R
  WHERE R.ROLE = 'Composer'
  AND R.ARTIST_ID IN
  (
    SELECT REF(ART)
    FROM ARTIST ART
    WHERE ARTIST_NAME LIKE '%Tchaikovsky'
  )
)
AND ALB.TITLE LIKE '%Swan Lake%';
/
-- QUESTION 2
CREATE OR REPLACE FUNCTION HIGH_DL_SONG
(P_TITLE IN VARCHAR2, P_ARTIST IN VARCHAR2)
   RETURN TRACK_TYPE
IS
   trackarray TRACKS;
   total integer;
   high_dl integer :=0;
   high_dl_track TRACK_TYPE;
BEGIN
  SELECT ALB.TRACK INTO trackarray from ALBUM3 ALB, ROLE3 R, ARTIST ART WHERE ALB.ALBUM_ID = P_TITLE AND ART.ARTIST_NAME = P_ARTIST AND REF(ALB) = R.ALBUM_ID AND REF(ART) = R.ARTIST_ID
     total := trackarray.count;
     FOR i in 1 .. total LOOP
        IF(trackarray(i).DL_COUNT > high_dl) THEN
          high_dl := trackarray(i).DL_COUNT;
          high_dl_track := trackarray(i);
        END IF;
     END LOOP;
  RETURN high_dl_track;
END;
/
-- QUESTION 3
SELECT ALB.TITLE, ALB.RELEASE_DATE, ALB.BASE_PRICE
FROM ALBUM3 ALB, ROLE3 R, ARTIST ART
WHERE REF(ALB) = R.ALBUM_ID
AND REF(ART) = R.ARTIST_ID
AND ALB.ALBUM_ID IN (SELECT ALBUM_ID FROM CD3)
AND ALB.ALBUM_ID IN (SELECT ALBUM_ID FROM VINYL3)
AND ART.ARTIST_NAME LIKE 'Bob Dylan'
GROUP BY ALB.ALBUM_ID, ALB.TITLE, ALB.RELEASE_DATE, ALB.BASE_PRICE;
/
