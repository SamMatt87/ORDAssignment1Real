DROP TABLE ALSO_BOUGHT;
DROP TABLE ROLE;
DROP TABLE ALBUM;
DROP TABLE ARTIST;
DROP TYPE ALSO_BOUGHT_TYPE;
DROP TYPE ROLE_TYPE;
DROP TYPE MP3_TYPE;
DROP TYPE CD_TYPE;
DROP TYPE TAPE_TYPE;
DROP TYPE VINYL_TYPE;
DROP TYPE ALBUM_TYPE;
DROP TYPE REVIEWS_TABLE;
DROP TYPE TRACKS;
DROP TYPE REVIEW_TYPE;
DROP TYPE TRACK_TYPE;
DROP TYPE ARTIST_TYPE;
/
CREATE TYPE ARTIST_TYPE AS OBJECT
(ARTIST_ID  NUMBER(9),
ARTIST_NAME VARCHAR(20));
/
CREATE TYPE TRACK_TYPE AS OBJECT
(TRACK_ID NUMBER(9),
SONG_TITLE  VARCHAR(20),
SONG_DURATION NUMBER(4),
/* Duration expressed as number of seconds*/
SONG_PRICE  NUMBER(3)
/*TRACK PRICE EXPRESSED AS A NUMBER OF CENTS*/)
/
CREATE TYPE REVIEW_TYPE AS OBJECT
(REVIEW_ID  NUMBER(9),
REVIEWER_NAME VARCHAR(20),
REVIEW_TEXT CLOB,
/*TEXT OF THE REVIEW*/
REVIEW_SCORE NUMBER(1,1),
/*REVIEW SCORE OUT OF 5*/
REVIEW_DATE DATE);
/
CREATE TYPE TRACKS AS VARRAY(30) OF TRACK_TYPE;
/
CREATE TYPE REVIEWS_TABLE AS TABLE OF REVIEW_TYPE;
/
CREATE TYPE ALBUM_TYPE AS OBJECT
(ALBUM_ID NUMBER(9),
TITLE VARCHAR(20),
/*NAME OF THE ALBUM*/
PLAYTIME  NUMBER(3),
/*ALBUM LENGTH IN NUMBER OF MINUTES*/
GENRE VARCHAR(10),
RELEASE_DATE  DATE,
/* THE DATE ON WHICH THE FIRST FORMAT OF THE ALBUM WAS RELEASED*/
TRACK TRACKS,
REVIEWS REVIEWS_TABLE)NOT FINAL;
/
CREATE TYPE VINYL_TYPE UNDER ALBUM_TYPE
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(2,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE TAPE_TYPE UNDER ALBUM_TYPE
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(2,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE CD_TYPE UNDER ALBUM_TYPE
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(2,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE MP3_TYPE UNDER ALBUM_TYPE
(PRICE NUMBER(2,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE ROLE_TYPE AS OBJECT
(ARTIST_ID  REF ARTIST_TYPE,
ALBUM_ID  REF ALBUM_TYPE,
ROLE  VARCHAR(10)
/*ROLE THE ARTIST PLAYED ON THE ALBUM*/);
/
CREATE TYPE ALSO_BOUGHT_TYPE AS OBJECT
(ALBUM_1_ID REF ALBUM_TYPE,
ALBUM_2_ID REF  ALBUM_TYPE,
COUNT NUMBER(9)
/*HOW MANY TIMES HAVE THE TWO ALBUMS BEEN BOUGHT TOGETHER*/);
/
CREATE TABLE ARTIST OF ARTIST_TYPE;
CREATE TABLE ALBUM OF ALBUM_TYPE
  NESTED TABLE REVIEWS STORE AS REVIEWS_TAB;
CREATE TABLE ROLE OF ROLE_TYPE;
CREATE TABLE ALSO_BOUGHT OF ALSO_BOUGHT_TYPE;
/