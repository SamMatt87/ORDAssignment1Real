-- QUESTION 9
CREATE OR REPLACE VIEW QUESTION_9 (TITLE, RELEASE_DATE, STANDARD_PRICE) AS
SELECT ALB1.TITLE, ALB1.RELEASE_DATE, CD.PRICE FROM
ALBUM ALB1, ALBUM ALB2, ALSO_BOUGHT AB, CD
WHERE AB.ALBUM_1_ID = REF(ALB1)
AND AB.ALBUM_2_ID = REF(ALB2)
AND ALB2.ALBUM_ID = 'ALB999'
AND CD.TITLE = ALB1.TITLE
AND CD.NEW_OR_USED = 1;
UNION
SELECT ALB1.TITLE, ALB1.RELEASE_DATE, CD.PRICE FROM
ALBUM ALB1, ALBUM ALB2, ALSO_BOUGHT AB, CD
WHERE AB.ALBUM_1_ID = REF(ALB2)
AND AB.ALBUM_2_ID = REF(ALB1)
AND ALB2.TITLE = 'Sketches of Spain'
AND CD.TITLE = ALB1.TITLE
AND CD.NEW_OR_USED = 1;

--Question 5
SELECT TITLE, RELEASE_DATE FROM ALBUM WHERE TITLE LIKE '%Magnificent%';

--QUESTION 7
CREATE OR REPLACE VIEW QUESTION_7 (TITLE, RELEASE_DATE, FORMAT, PRICE, DISCOUNTED_PRICE) AS
SELECT ALB.TITLE, ALB.RELEASE_DATE, 'CD', C.PRICE, C.DISCOUNTPRICE() FROM ALBUM ALB, ARTIST ART, ROLE ROL, CD C
WHERE ART.ARTIST_NAME = 'Cick Corea' AND ROL.ARTIST_ID = REF(ART) AND ROL.ALBUM_ID = REF(ALB) AND ALB.ALBUM_ID = C.ALBUM_ID
UNION
SELECT ALB.TITLE, ALB.RELEASE_DATE,'VINYL', V.PRICE, V.DISCOUNTPRICE() FROM ALBUM ALB, ARTIST ART, ROLE ROL, VINYL V
WHERE ART.ARTIST_NAME = 'Cick Corea' AND ROL.ARTIST_ID = REF(ART) AND ROL.ALBUM_ID = REF(ALB) AND ALB.ALBUM_ID = V.ALBUM_ID
UNION
SELECT ALB.TITLE, ALB.RELEASE_DATE,'TAPE', T.PRICE, T.DISCOUNTPRICE() FROM ALBUM ALB, ARTIST ART, ROLE ROL, TAPE T
WHERE ART.ARTIST_NAME = 'Cick Corea' AND ROL.ARTIST_ID = REF(ART) AND ROL.ALBUM_ID = REF(ALB) AND ALB.ALBUM_ID = T.ALBUM_ID
UNION
SELECT ALB.TITLE, ALB.RELEASE_DATE,'MP3', M.PRICE, M.DISCOUNTPRICE() FROM ALBUM ALB, ARTIST ART, ROLE ROL, MP3 M
WHERE ART.ARTIST_NAME = 'Cick Corea' AND ROL.ARTIST_ID = REF(ART) AND ROL.ALBUM_ID = REF(ALB) AND ALB.ALBUM_ID = M.ALBUM_ID;

CREATE OR REPLACE FUNCTION LONGEST_SONG
   RETURN TRACK_TYPE
IS
   trackarray TRACKS;
   total integer;
   longest integer :=0;
   longest_track TRACK_TYPE;
BEGIN
  SELECT TRACK INTO trackarray from ALBUM
     total := trackarray.count;
     FOR i in 1 .. total LOOP
        IF(trackarray(i).SONG_DURATION > longest) THEN
          longest := trackarray(i).DL_COUNT;
          longest_track := trackarray(i);
        END IF;
     END LOOP;
  RETURN longest_track;
END;
/
SELECT TITLE, RELELASE_DATE, LONGEST_SONG.SONG_TITLE, LONGEST_SONG.DL_COUNT FROM ALBUM;
/

CREATE OR REPLACE FUNCTION LONGEST_BLOWING
   RETURN TRACK_TYPE
IS
   trackarray TRACKS;
   total integer;
   longest integer :=0;
   longest_track TRACK_TYPE;
BEGIN
  SELECT TRACK INTO trackarray from ALBUM
     total := trackarray.count;
     FOR i in 1 .. total LOOP
     IF(trackarray(i).SONG_TITLE = 'Blowin in the Wind')
        IF(trackarray(i).SONG_DURATION > longest) THEN
          longest := trackarray(i).DL_COUNT;
          longest_track := trackarray(i);
        END IF;
        END IF;
     END LOOP;
  RETURN longest_track
END;
/
