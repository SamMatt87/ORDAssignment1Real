DROP TABLE ALSO_BOUGHT3;
DROP TABLE ROLE3;
DROP TABLE MP33;
DROP TABLE TAPE3;
DROP TABLE VINYL3;
DROP TABLE CD3;
DROP TABLE ALBUM3;
DROP TYPE ALSO_BOUGHT_TYPE3;
DROP TYPE ROLE_TYPE3;
DROP TYPE MP3_TYPE3;
DROP TYPE TAPE_TYPE3;
DROP TYPE VINYL_TYPE3;
DROP TYPE CD_TYPE3;
DROP TYPE ALBUM_TYPE3;
/
CREATE TYPE ALBUM_TYPE3 AS OBJECT
(ALBUM_ID VARCHAR2(50),
TITLE VARCHAR2(100),
/*NAME OF THE ALBUM*/
PLAYTIME  NUMBER(4),
/*ALBUM LENGTH IN NUMBER OF MINUTES*/
GENRE VARCHAR2(30),
RELEASE_DATE  DATE,
/* THE DATE ON WHICH THE FIRST FORMAT OF THE ALBUM WAS RELEASED*/
TRACK TRACKS,
REVIEWS REVIEWS_TABLE,
BASE_PRICE NUMBER(10,2),
NOT FINAL MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER) NOT FINAL;
/
CREATE OR REPLACE TYPE BODY ALBUM_TYPE3 AS
MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER IS
BEGIN
  RETURN BASE_PRICE;
END DISCOUNTPRICE;
END;
/
CREATE TYPE CD_TYPE3 UNDER ALBUM_TYPE3
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(5,2),
/*ALBUM PRICE IN $*/
OVERRIDING MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER);
/
CREATE OR REPLACE TYPE BODY CD_TYPE3 AS
OVERRIDING MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER IS
NEWPRICE NUMBER;
BEGIN
IF (NEW_OR_USED = 1 AND GENRE = 'CLASSICAL') THEN
  NEWPRICE := PRICE * 0.75;
ELSE
  NEWPRICE := PRICE;
END IF;
END DISCOUNTPRICE;
END;
/
CREATE TYPE VINYL_TYPE3 UNDER ALBUM_TYPE3
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(5,2),
/*ALBUM PRICE IN $*/
OVERRIDING MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER);
/
CREATE OR REPLACE TYPE BODY VINYL_TYPE AS
OVERRIDING MEMBER FUNCTION DISCOUNTPRICE RETURN NUMBER IS
NEWPRICE  NUMBER;
BEGIN
IF (GENRE = 'ROCK') THEN
  NEWPRICE := PRICE * 0.85;
ELSIF (GENRE = 'JAZZ') THEN
  NEWPRICE := PRICE * 0.8;
ELSE
  NEWPRICE := PRICE;
END IF;
RETURN NEWPRICE;
END DISCOUNTPRICE;
END;
/
CREATE TYPE TAPE_TYPE3 UNDER ALBUM_TYPE3
(NEW_OR_USED NUMBER(1),
/*1 FOR NEW, 0 FOR USED*/
PRICE NUMBER(5,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE MP3_TYPE3 UNDER ALBUM_TYPE3
(PRICE NUMBER(5,2)
/*ALBUM PRICE IN $*/);
/
CREATE TYPE ROLE_TYPE3 AS OBJECT
(ARTIST_ID  REF ARTIST_TYPE,
ALBUM_ID  REF ALBUM_TYPE3,
ROLE  VARCHAR2(20)
/*ROLE THE ARTIST PLAYED ON THE ALBUM*/);
/
CREATE TYPE ALSO_BOUGHT_TYPE3 AS OBJECT
(ALBUM_1_ID REF ALBUM_TYPE3,
ALBUM_2_ID REF ALBUM_TYPE3);
/
CREATE TABLE ALBUM3 OF ALBUM_TYPE3
  NESTED TABLE REVIEWS STORE AS REVIEWS_TAB3;
CREATE TABLE CD3 OF CD_TYPE3
  NESTED TABLE REVIEWS STORE AS CD_REVIEWS_TAB3;
CREATE TABLE VINYL3 OF VINYL_TYPE3
  NESTED TABLE REVIEWS STORE AS VINYL_REVIEWS_TAB3;
CREATE TABLE TAPE3 OF TAPE_TYPE3
  NESTED TABLE REVIEWS STORE AS TAPE_REVIEWS_TAB3;
 CREATE TABLE MP33 OF MP3_TYPE3
  NESTED TABLE REVIEWS STORE AS MP3_REVIEWS_TAB3;
CREATE TABLE ROLE3 OF ROLE_TYPE3;
CREATE TABLE ALSO_BOUGHT3 OF ALSO_BOUGHT_TYPE3;
/
