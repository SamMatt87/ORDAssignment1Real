-- QUESTION 1
SELECT ALB.TITLE, ALB.RELEASE_DATE, ALB.PRICE, ART.ARTIST_NAME CONDUCTOR
FROM CD ALB, ROLE R, ARTIST ART
WHERE REF(ALB) = R.ALBUM_ID
AND REF(ART) = R.ARTIST_ID
AND R.ROLE = 'Conductor'
AND REF(ALB) IN
(
  SELECT R.ALBUM_ID
  FROM ROLE R
  WHERE R.ROLE = 'Composer'
  AND R.ARTIST_ID IN
  (
    SELECT REF(ART)
    FROM ARTIST ART
    WHERE ARTIST_NAME LIKE '%Tchaikovsky'
  )
)
AND ALB.TITLE LIKE '%Swan Lake%'

UNION

SELECT ALB.TITLE, ALB.RELEASE_DATE, ALB.PRICE, ART.ARTIST_NAME CONDUCTOR
FROM VINYL ALB, ROLE R, ARTIST ART
WHERE REF(ALB) = R.ALBUM_ID
AND REF(ART) = R.ARTIST_ID
AND R.ROLE = 'Conductor'
AND REF(ALB) IN
(
  SELECT R.ALBUM_ID
  FROM ROLE R
  WHERE R.ROLE = 'Composer'
  AND R.ARTIST_ID IN
  (
    SELECT REF(ART)
    FROM ARTIST ART
    WHERE ARTIST_NAME LIKE '%Tchaikovsky'
  )
)
AND ALB.TITLE LIKE '%Swan Lake%';

-- QUESTION 2
CREATE OR REPLACE FUNCTION HIGH_DL_SONG
   RETURN TRACK_TYPE
IS
   trackarray TRACKS;
   total integer;
   high_dl integer :=0;
   high_dl_track TRACK_TYPE;

BEGIN
  SELECT TRACK INTO trackarray from CD where ALBUM_ID = 'ALB5';
     total := trackarray.count;
     FOR i in 1 .. total LOOP
        IF(trackarray(i).DL_COUNT > high_dl) THEN
          high_dl := trackarray(i).DL_COUNT;
          high_dl_track := trackarray(i);
        END IF;
     END LOOP;
  RETURN high_dl_track;
END;

-- QUESTION 3
SELECT DISC.TITLE, DISC.RELEASE_DATE, DISC.PRICE
FROM CD DISC, ROLE R, ARTIST ART
WHERE REF(DISC) = R.ALBUM_ID
AND REF(ART) = R.ARTIST_ID
AND DISC.ALBUM_ID IN (SELECT ALBUM_ID FROM VINYL)
AND ART.ARTIST_NAME LIKE 'Bob Dylan'
GROUP BY DISC.ALBUM_ID, DISC.TITLE, DISC.RELEASE_DATE, DISC.PRICE;
